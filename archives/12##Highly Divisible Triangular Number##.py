"""
<p>The sequence of triangle numbers is generated by adding the natural numbers. So the $7$<sup>th</sup> triangle number would be $1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. The first ten terms would be:
$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \dots$$</p>
<p>Let us list the factors of the first seven triangle numbers:</p>
\begin{align}
\mathbf 1 &amp;\colon 1\\
\mathbf 3 &amp;\colon 1,3\\
\mathbf 6 &amp;\colon 1,2,3,6\\
\mathbf{10} &amp;\colon 1,2,5,10\\
\mathbf{15} &amp;\colon 1,3,5,15\\
\mathbf{21} &amp;\colon 1,3,7,21\\
\mathbf{28} &amp;\colon 1,2,4,7,14,28
\end{align}
<p>We can see that $28$ is the first triangle number to have over five divisors.</p>
<p>What is the value of the first triangle number to have over five hundred divisors?</p>
"""


def triangle_number(n):
    return sum(range(n+1))


def get_divisors(n):
    l = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            l.append(i)
            l.append(n//i)
    return list(sorted(l))


max_divisor = 500
divisors = []
i = 1
while len(divisors) < max_divisor:
    tri = triangle_number(i)
    divisors = get_divisors(tri)
    print(i, tri, divisors)
    i += 1

